#define SVEN_EVENT_IGOR_DIES UNDEAD_SIDE
[event]
   name=die
   [filter]
     id=Igor
   [/filter]
   [filter_condition]
     [have_unit]
       side=1
       race=undead
     [/have_unit]
   [/filter_condition]
   [message]
      speaker=narrator
      message=_"As Igor dies, his magical control over the undead is broken."
   [/message]
   [modify_unit]
      [filter]
         side=$unit.side
         race=undead
      [/filter]
      side={UNDEAD_SIDE}
   [/modify_unit]
[/event]
#enddef
   
#define SVEN_ACTION_REPLENISH_UNDEAD
   [store_unit]
      [filter]
        id=Igor
      [/filter]
      kill=no
      variable=igor
   [/store_unit]

   [if]
     [not]
       [have_unit]
          side=$igor.side
          type=Slow Advance Skeleton,Slow Advance Deathblade,Slow Advance Revenant,Slow Advance Draug
       [/have_unit]
     [/not]
     [then]
        {GENERIC_UNIT $igor.side (Slow Advance Skeleton) $igor.x $igor.y}
     [/then]
   [/if]

   [if]
     [not]
       [have_unit]
          side=$igor.side
          type=Slow Advance Skeleton Archer,Slow Advance Bone Shooter,Slow Advance Banebow
       [/have_unit]
     [/not]
     [then]
        {GENERIC_UNIT $igor.side (Slow Advance Skeleton Archer) $igor.x $igor.y}
     [/then]
   [/if]
   [clear_variable]
      name=igor
   [/clear_variable]
#enddef

#define SVEN_EFFECT_INCREASE_XP
   [effect]
      apply_to=max_experience
      increase=10%
   [/effect]
#enddef

#define SVEN_AMLAS TYPE
[advancement]
   id=hp_plus_30_{TYPE}
   description = _ "increase HP by 30%"
   [effect]
     apply_to=hitpoints
     increase_total=30%
     heal_full=yes
   [/effect]
   [effect]
     apply_to=max_experience
     increase=10%
   [/effect]
[/advancement]
[advancement]
   id=add_move_{TYPE}
   description = _ "one additional move per turn"
   [effect]
      apply_to=movement
      increase=1
   [/effect]
   [effect]
      apply_to=hitpoints
      heal_full=yes
   [/effect]
   [effect]
      apply_to=max_experience
      increase=10%
   [/effect]
[/advancement]
[advancement]
   id=increase_damage_{TYPE}
   description = _ "increase damage for all attacks by 1"
   [effect]
      apply_to=attack
      increase_damage=1
   [/effect]
   [effect]
      apply_to=hitpoints
      heal_full=yes
   [/effect]
   [effect]
      apply_to=max_experience
      increase=10%
   [/effect]
[/advancement]
#enddef

#define SVEN_ADVANCE_AMLA TYPE ADVANCES_TO
[advancement]
   id=advance {ADVANCES_TO}
   description = _ "advance to {ADVANCES_TO}"
   require_amla=hp_plus_30_{TYPE},add_move_{TYPE},increase_damage_{TYPE}
   always_display=yes
   [effect]
      apply_to=type
      name=Slow Advance {ADVANCES_TO}
   [/effect]
   [effect]
      apply_to=hitpoints
      heal_full=yes
   [/effect]
[/advancement]
#enddef


#define SVEN_MAKE_DEFAULT_SLOW_ADVANCE_UNIT_TYPE UNIT_TYPE XP ADVANCES_TO
[unit_type]
  id=Slow Advance {UNIT_TYPE}
  [base_unit]
    id={UNIT_TYPE}
  [/base_unit]
  experience={XP}
  advances_to=null
  {SVEN_AMLAS ({UNIT_TYPE})}
  {SVEN_ADVANCE_AMLA ({UNIT_TYPE}) ({ADVANCES_TO})}
  [female]
    experience={XP}
    advances_to=null
  [/female]
[/unit_type]
#enddef

#define SVEN_MAKE_DEFAULT_SLOW_ADVANCE_UNIT_TYPE_NO_ADVANCE UNIT_TYPE XP
[unit_type]
  id=Slow Advance {UNIT_TYPE}
  [base_unit]
    id={UNIT_TYPE}
  [/base_unit]
  experience={XP}
  advances_to=""
  {SVEN_AMLAS ({UNIT_TYPE})}
  [female]
    experience={XP}
    advances_to=""
  [/female]
[/unit_type]
#enddef

#define SVEN_MAKE_DEFAULT_SLOW_ADVANCE_UNIT_TYPE_TWO_ADVANCES UNIT_TYPE XP ADVANCES_TO1 ADVANCES_TO2
[unit_type]
  id=Slow Advance {UNIT_TYPE}
  [base_unit]
     id={UNIT_TYPE}
  [/base_unit]
  experience={XP}
  advances_to=""
  {SVEN_AMLAS ({UNIT_TYPE})}
  {SVEN_ADVANCE_AMLA ({UNIT_TYPE}) ({ADVANCES_TO1})}
  {SVEN_ADVANCE_AMLA ({UNIT_TYPE}) ({ADVANCES_TO2})}
  [female]
     advances_to=""
     experience={XP}
  [/female]
[/unit_type]
#enddef

#define SVEN_MAKE_DEFAULT_SLOW_ADVANCE_UNIT_TYPE_THREE_ADVANCES UNIT_TYPE XP ADVANCES_TO1 ADVANCES_TO2 ADVANCES_TO3
[unit_type]
  id=Slow Advance {UNIT_TYPE}
  [base_unit]
     id={UNIT_TYPE}
  [/base_unit]
  experience={XP}
  advances_to=""
  {SVEN_AMLAS ({UNIT_TYPE})}
  {SVEN_ADVANCE_AMLA ({UNIT_TYPE}) ({ADVANCES_TO1})}
  {SVEN_ADVANCE_AMLA ({UNIT_TYPE}) ({ADVANCES_TO2})}
  {SVEN_ADVANCE_AMLA ({UNIT_TYPE}) ({ADVANCES_TO3})}
  [female]
     advances_to=""
     experience={XP}
  [/female]
[/unit_type]
#enddef

#define TRAIT_NO_SKIRMISH
    [trait]
        id=dummy
        availability="musthave"
        male_name=""
        female_name=""
        description=""
        [effect]
            apply_to=remove_ability
            [abilities]
                [skirmisher]
                    id=skirmisher
                [/skirmisher]
            [/abilities]
        [/effect]
    [/trait]
#enddef

#define SVEN_ABILITY_SKIRMISHER
# this is needed so that the ability doesn't go away when you advance
    [skirmisher]
        id=sven_skirmisher
        name= _ "skirmisher"
        female_name= _ "female^skirmisher"
        description= _ "This unit is skilled in moving past enemies quickly, and ignores all enemy Zones of Control."
        affect_self=yes
    [/skirmisher]
#enddef

#define ACTION_RANDOM_UNDEAD CHANCE LEVEL SIDE X Y
# randomly decide whether to create an undead unit at the stated location
# CHANCE is the percentage (1-100) chance of creating a unit. LEVEL
# is the maximum level the undead unit should have (1-3). SIDE is the side
# the unit should be on
   [set_variable]
      name=create_undead
      rand=0..100
   [/set_variable]
   [if]
     [variable]
       name=create_undead
       less_than={CHANCE}
     [/variable]
     [then]
       {VARIABLE undead_level {LEVEL}}
       [switch]
          variable=undead_level
          [case]
             value=1
             [set_variable]
                name=type_to_create
                rand=Ghost,Ghost,Ghost,Ghoul,Ghoul,Skeleton,Skeleton Archer
             [/set_variable]
          [/case]
          [case]
             value=2
             [set_variable]
               name=type_to_create
               rand=Ghost,Ghost,Ghost,Shadow,Wraith,Ghoul,Ghoul,Necrophage,Skeleton,Revenant,Skeleton Archer,Bone Shooter
             [/set_variable]
          [/case]
          [case]
             value=3
             [set_variable]
                name=type_to_create
                rand=Ghost,Ghost,Ghost,Shadow,Wraith,Nightgaunt,Spectre,Ghoul,Ghoul,Necrophage,Ghast,Skeleton,Deathblade,Revenant,Draug,Skeleton Archer,Bone Shooter,Banebow
             [/set_variable]
          [/case]
       [/switch]
       {GENERIC_UNIT {SIDE} $type_to_create {X} {Y}}
       {CLEAR_VARIABLE undead_level}
       {CLEAR_VARIABLE type_to_create}
     [/then]
    [/if]
    {CLEAR_VARIABLE creat_undead}
#enddef

